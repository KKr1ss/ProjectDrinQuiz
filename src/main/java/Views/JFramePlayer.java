/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Views.Base.CustomJFrame;
import static Helpers.ConverterHelper.convertSeparatedStringToStringArray;
import static Helpers.GameHandler.gameHandlerInstance;
import static Helpers.ViewHelper.infoBox;
import com.formdev.flatlaf.FlatDarkLaf;
import com.k33ptoo.components.KGradientPanel;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import static Helpers.ViewHelper.*;
import Models.Player;
import com.mycompany.projectdrinquiz.ProjectDrinQuiz;
import java.awt.Color;
import java.awt.Panel;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;

/**
 *
 * @author Jani
 */
public class JFramePlayer extends CustomJFrame {

    public static JFramePlayer jFramePlayerInstance;
    int cupsForThisTurn;

    @Override
    public Insets insets() {
        return super.insets(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }
    /**
     * Creates new form JFramePlayer
     */
    ImageIcon icon = new ImageIcon(".//resources/images/icon.png");

    public JFramePlayer() throws IOException {
        initComponents();
        isPlayer = true;
        setFrameToFullscreen();
        showOnScreen(2, this);
        
        newPlayer_kGrdntPnl.setVisible(false);
        game_kGrdntPnl.setVisible(false);
        playerFinished_kGrdntPnl.setVisible(false);
        scores_kGrdntPnl.setVisible(false);

        newPlayer_kGrdntPnl.setLayout(null);
        game_kGrdntPnl.setLayout(null);
        playerFinished_kGrdntPnl.setLayout(null);
        scores_kGrdntPnl.setLayout(null);

        imageScaler();
        
        if (gameHandlerInstance.getGame().getIsGameFinished()) {
            JFrameHost.jFrameHostInstance.dispose();
            JFrameHost.jFrameHostInstance = null;
            
            generateScoreFrame();
            scores_kGrdntPnl.setVisible(true);
            return;
        }
        
        JFrameHost.jFrameHostInstance.setVisible(true);
        
        if (gameHandlerInstance.getActualPlayer() == null) {
            newPlayer_kGrdntPnl.setVisible(true);
        } else {
            generateGameFrame();
            game_kGrdntPnl.setVisible(true);
        }

        changeLocation(newPlayer_jTxtFldPlayerName, 0, 0);
        changeLocation(newPlayer_kBttnStart, 0, 80);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        componentMoverUtil1 = new com.k33ptoo.utils.ComponentMoverUtil();
        jLyrdPn = new javax.swing.JLayeredPane();
        newPlayer_kGrdntPnl = new com.k33ptoo.components.KGradientPanel();
        newPlayer_jTxtFldPlayerName = new javax.swing.JTextField();
        newPlayer_kBttnStart = new com.k33ptoo.components.KButton();
        game_kGrdntPnl = new com.k33ptoo.components.KGradientPanel();
        game_jLblQuestion = new javax.swing.JLabel();
        game_jLblHalf = new javax.swing.JLabel();
        game_jLblCall = new javax.swing.JLabel();
        game_jLblCupNumber = new javax.swing.JLabel();
        game_jLblCup = new javax.swing.JLabel();
        game_jLblGroup = new javax.swing.JLabel();
        game_jLblPoint = new javax.swing.JLabel();
        game_jLblGameName = new javax.swing.JLabel();
        game_jLblPlayerName = new javax.swing.JLabel();
        game_jLblRefill = new javax.swing.JLabel();
        game_jLblRefillNumber = new javax.swing.JLabel();
        playerFinished_kGrdntPnl = new com.k33ptoo.components.KGradientPanel();
        playerFinished_jLblEarnedPoints = new javax.swing.JLabel();
        playerFinished_jLblGameOver = new javax.swing.JLabel();
        playerFinished_jLblPlayerName = new javax.swing.JLabel();
        scores_kGrdntPnl = new com.k33ptoo.components.KGradientPanel();
        scores_jLblGameNameHasEnded = new javax.swing.JLabel();
        scores_jLblGold = new javax.swing.JLabel();
        scores_jLblSilver = new javax.swing.JLabel();
        scores_jLblBronze = new javax.swing.JLabel();
        scores_jLblFirstPlace = new javax.swing.JLabel();
        scores_jLblThirdPlace = new javax.swing.JLabel();
        scores_jLblSecondPlace = new javax.swing.JLabel();
        scores_kBttnMenu = new com.k33ptoo.components.KButton();
        scores_jLblSecondPlaceScore = new javax.swing.JLabel();
        scores_jLblFirstPlaceScore = new javax.swing.JLabel();
        scores_jLblThirdPlaceScore = new javax.swing.JLabel();
        scores_JLblLogo = new javax.swing.JLabel();
        scores_jScrllPn = new javax.swing.JScrollPane();
        scores_jLstScoreBoard = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(icon.getImage());
        setName("frame"); // NOI18N
        setUndecorated(true);

        newPlayer_kGrdntPnl.setkEndColor(new java.awt.Color(0, 100, 0));
        newPlayer_kGrdntPnl.setkStartColor(new java.awt.Color(46, 139, 87));

        newPlayer_jTxtFldPlayerName.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newPlayer_jTxtFldPlayerName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newPlayer_jTxtFldPlayerName.setText("Írd be a neved!");
        newPlayer_jTxtFldPlayerName.setPreferredSize(new java.awt.Dimension(300, 50));
        newPlayer_jTxtFldPlayerName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newPlayer_jTxtFldPlayerNameMouseClicked(evt);
            }
        });

        newPlayer_kBttnStart.setBorder(null);
        newPlayer_kBttnStart.setText("Játék indítása");
        newPlayer_kBttnStart.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newPlayer_kBttnStart.setkBorderRadius(50);
        newPlayer_kBttnStart.setkEndColor(new java.awt.Color(100, 0, 0));
        newPlayer_kBttnStart.setkHoverEndColor(new java.awt.Color(139, 46, 87));
        newPlayer_kBttnStart.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newPlayer_kBttnStart.setkHoverStartColor(new java.awt.Color(100, 0, 0));
        newPlayer_kBttnStart.setkIndicatorThickness(0);
        newPlayer_kBttnStart.setkStartColor(new java.awt.Color(139, 46, 87));
        newPlayer_kBttnStart.setPreferredSize(new java.awt.Dimension(200, 50));
        newPlayer_kBttnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newPlayer_kBttnStartMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout newPlayer_kGrdntPnlLayout = new javax.swing.GroupLayout(newPlayer_kGrdntPnl);
        newPlayer_kGrdntPnl.setLayout(newPlayer_kGrdntPnlLayout);
        newPlayer_kGrdntPnlLayout.setHorizontalGroup(
            newPlayer_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPlayer_kGrdntPnlLayout.createSequentialGroup()
                .addGroup(newPlayer_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newPlayer_kGrdntPnlLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(newPlayer_jTxtFldPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newPlayer_kGrdntPnlLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(newPlayer_kBttnStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(250, 250, 250))
        );
        newPlayer_kGrdntPnlLayout.setVerticalGroup(
            newPlayer_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPlayer_kGrdntPnlLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(newPlayer_jTxtFldPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newPlayer_kBttnStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );

        game_kGrdntPnl.setkEndColor(new java.awt.Color(0, 100, 0));
        game_kGrdntPnl.setkStartColor(new java.awt.Color(46, 139, 87));

        game_jLblQuestion.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        game_jLblQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblQuestion.setText("*insert question here*");

        game_jLblHalf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblHalf.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        game_jLblHalf.setPreferredSize(new java.awt.Dimension(50, 50));
        game_jLblHalf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                game_jLblHalfMouseClicked(evt);
            }
        });

        game_jLblCall.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblCall.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        game_jLblCall.setPreferredSize(new java.awt.Dimension(50, 50));

        game_jLblCupNumber.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        game_jLblCupNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblCupNumber.setText("*P.Sz.*");
        game_jLblCupNumber.setPreferredSize(new java.awt.Dimension(50, 50));

        game_jLblCup.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblCup.setPreferredSize(new java.awt.Dimension(50, 50));

        game_jLblGroup.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblGroup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        game_jLblGroup.setPreferredSize(new java.awt.Dimension(50, 50));

        game_jLblPoint.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        game_jLblPoint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblPoint.setText("Pontok:");
        game_jLblPoint.setPreferredSize(new java.awt.Dimension(150, 50));

        game_jLblGameName.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        game_jLblGameName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblGameName.setText("Játék neve:");
        game_jLblGameName.setPreferredSize(new java.awt.Dimension(150, 50));

        game_jLblPlayerName.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        game_jLblPlayerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblPlayerName.setText("Játékos neve:");
        game_jLblPlayerName.setPreferredSize(new java.awt.Dimension(150, 50));

        game_jLblRefill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblRefill.setPreferredSize(new java.awt.Dimension(50, 50));

        game_jLblRefillNumber.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        game_jLblRefillNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_jLblRefillNumber.setText("*R.Sz.*");
        game_jLblRefillNumber.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout game_kGrdntPnlLayout = new javax.swing.GroupLayout(game_kGrdntPnl);
        game_kGrdntPnl.setLayout(game_kGrdntPnlLayout);
        game_kGrdntPnlLayout.setHorizontalGroup(
            game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(game_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(game_jLblQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, game_kGrdntPnlLayout.createSequentialGroup()
                        .addGroup(game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(game_jLblGameName, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                            .addComponent(game_jLblPlayerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(game_kGrdntPnlLayout.createSequentialGroup()
                                .addComponent(game_jLblPoint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(game_jLblRefill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(game_kGrdntPnlLayout.createSequentialGroup()
                                .addComponent(game_jLblHalf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(game_jLblCall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(game_jLblGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                                .addComponent(game_jLblCup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(game_jLblCupNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(game_jLblRefillNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        game_kGrdntPnlLayout.setVerticalGroup(
            game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(game_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(game_jLblRefill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(game_jLblPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(game_jLblGameName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(game_jLblRefillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(game_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(game_jLblCup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(game_jLblPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(game_jLblCupNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(game_jLblGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(game_jLblHalf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(game_jLblCall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(game_jLblQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );

        playerFinished_kGrdntPnl.setkEndColor(new java.awt.Color(0, 100, 0));
        playerFinished_kGrdntPnl.setkStartColor(new java.awt.Color(46, 139, 87));

        playerFinished_jLblEarnedPoints.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        playerFinished_jLblEarnedPoints.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerFinished_jLblEarnedPoints.setText("Elért pontjaid: *insert earned points*");

        playerFinished_jLblGameOver.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        playerFinished_jLblGameOver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerFinished_jLblGameOver.setText("A játék véget ért számodra!");

        playerFinished_jLblPlayerName.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        playerFinished_jLblPlayerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerFinished_jLblPlayerName.setText("Gratulálunk, !");

        javax.swing.GroupLayout playerFinished_kGrdntPnlLayout = new javax.swing.GroupLayout(playerFinished_kGrdntPnl);
        playerFinished_kGrdntPnl.setLayout(playerFinished_kGrdntPnlLayout);
        playerFinished_kGrdntPnlLayout.setHorizontalGroup(
            playerFinished_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerFinished_jLblGameOver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(playerFinished_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerFinished_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerFinished_jLblEarnedPoints, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addComponent(playerFinished_jLblPlayerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playerFinished_kGrdntPnlLayout.setVerticalGroup(
            playerFinished_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerFinished_kGrdntPnlLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(playerFinished_jLblGameOver, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(playerFinished_jLblPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerFinished_jLblEarnedPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        scores_kGrdntPnl.setkEndColor(new java.awt.Color(0, 100, 0));
        scores_kGrdntPnl.setkStartColor(new java.awt.Color(46, 139, 87));

        scores_jLblGameNameHasEnded.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLblGameNameHasEnded.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblGameNameHasEnded.setText(" véget ért!");
        scores_jLblGameNameHasEnded.setToolTipText("");

        scores_jLblGold.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblGold.setPreferredSize(new java.awt.Dimension(50, 50));

        scores_jLblSilver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblSilver.setPreferredSize(new java.awt.Dimension(50, 50));

        scores_jLblBronze.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblBronze.setPreferredSize(new java.awt.Dimension(50, 50));

        scores_jLblFirstPlace.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLblFirstPlace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblFirstPlace.setText("*insert 1. player name*");
        scores_jLblFirstPlace.setPreferredSize(new java.awt.Dimension(250, 50));

        scores_jLblThirdPlace.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLblThirdPlace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblThirdPlace.setText("*insert 3. player name*");
        scores_jLblThirdPlace.setPreferredSize(new java.awt.Dimension(250, 50));

        scores_jLblSecondPlace.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLblSecondPlace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblSecondPlace.setText("*insert 2. player name*");
        scores_jLblSecondPlace.setPreferredSize(new java.awt.Dimension(250, 50));

        scores_kBttnMenu.setBorder(null);
        scores_kBttnMenu.setText("Menu");
        scores_kBttnMenu.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_kBttnMenu.setkBorderRadius(50);
        scores_kBttnMenu.setkEndColor(new java.awt.Color(100, 0, 0));
        scores_kBttnMenu.setkHoverEndColor(new java.awt.Color(139, 46, 87));
        scores_kBttnMenu.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        scores_kBttnMenu.setkHoverStartColor(new java.awt.Color(100, 0, 0));
        scores_kBttnMenu.setkIndicatorThickness(0);
        scores_kBttnMenu.setkStartColor(new java.awt.Color(139, 46, 87));
        scores_kBttnMenu.setPreferredSize(new java.awt.Dimension(200, 50));
        scores_kBttnMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scores_kBttnMenuMouseClicked(evt);
            }
        });

        scores_jLblSecondPlaceScore.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLblSecondPlaceScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblSecondPlaceScore.setPreferredSize(new java.awt.Dimension(100, 50));

        scores_jLblFirstPlaceScore.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLblFirstPlaceScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblFirstPlaceScore.setPreferredSize(new java.awt.Dimension(100, 50));

        scores_jLblThirdPlaceScore.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLblThirdPlaceScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_jLblThirdPlaceScore.setPreferredSize(new java.awt.Dimension(100, 50));

        scores_JLblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scores_JLblLogo.setIcon(new ImageIcon("resources/images/DrinQuiz.gif"));

        scores_jLstScoreBoard.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        scores_jLstScoreBoard.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        scores_jLstScoreBoard.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scores_jLstScoreBoard.setToolTipText("");
        scores_jLstScoreBoard.setSelectionModel(new NoSelectionModel());
        scores_jScrllPn.setViewportView(scores_jLstScoreBoard);

        javax.swing.GroupLayout scores_kGrdntPnlLayout = new javax.swing.GroupLayout(scores_kGrdntPnl);
        scores_kGrdntPnl.setLayout(scores_kGrdntPnlLayout);
        scores_kGrdntPnlLayout.setHorizontalGroup(
            scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scores_JLblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(scores_kBttnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scores_jLblGameNameHasEnded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                        .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                                .addComponent(scores_jLblSilver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(scores_jLblSecondPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                                .addComponent(scores_jLblGold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(scores_jLblFirstPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                                .addComponent(scores_jLblBronze, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(scores_jLblThirdPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scores_jLblThirdPlaceScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scores_jLblSecondPlaceScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scores_jLblFirstPlaceScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(scores_jScrllPn, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)))
                .addContainerGap())
        );
        scores_kGrdntPnlLayout.setVerticalGroup(
            scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scores_JLblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scores_jLblGameNameHasEnded, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(scores_kGrdntPnlLayout.createSequentialGroup()
                        .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scores_jLblGold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(scores_jLblFirstPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(scores_jLblFirstPlaceScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scores_jLblSilver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(scores_jLblSecondPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(scores_jLblSecondPlaceScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scores_jLblBronze, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(scores_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(scores_jLblThirdPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(scores_jLblThirdPlaceScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(scores_jScrllPn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(scores_kBttnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLyrdPn.setLayer(newPlayer_kGrdntPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLyrdPn.setLayer(game_kGrdntPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLyrdPn.setLayer(playerFinished_kGrdntPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLyrdPn.setLayer(scores_kGrdntPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLyrdPnLayout = new javax.swing.GroupLayout(jLyrdPn);
        jLyrdPn.setLayout(jLyrdPnLayout);
        jLyrdPnLayout.setHorizontalGroup(
            jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newPlayer_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(game_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(playerFinished_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scores_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLyrdPnLayout.setVerticalGroup(
            jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newPlayer_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(game_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(playerFinished_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scores_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLyrdPn))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLyrdPn))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newPlayer_jTxtFldPlayerNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPlayer_jTxtFldPlayerNameMouseClicked
        // TODO addCups your handling code here:
        if (newPlayer_jTxtFldPlayerName.getText().equals("Írd be a neved!")) {
            newPlayer_jTxtFldPlayerName.setText("");
        }
    }//GEN-LAST:event_newPlayer_jTxtFldPlayerNameMouseClicked

    private void newPlayer_kBttnStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPlayer_kBttnStartMouseClicked
        // TODO addCups your handling code here:
        String playerName = newPlayer_jTxtFldPlayerName.getText();
        if (playerName.equals("") || playerName.equals("Írd be a neved!")) {
            infoBox("Nem adtál meg nevet!");
            return;
        }

        gameHandlerInstance.createPlayer(playerName);

        generateGameFrame();
        switchPanelView(newPlayer_kGrdntPnl, game_kGrdntPnl);
    }//GEN-LAST:event_newPlayer_kBttnStartMouseClicked

    private void scores_kBttnMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scores_kBttnMenuMouseClicked
        // TODO add your handling code here:
        jFramePlayerInstance = null;
        JFrameHost.jFrameHostInstance = null;

        ProjectDrinQuiz.main(new String[]{});

        this.dispose();
    }//GEN-LAST:event_scores_kBttnMenuMouseClicked

    private void game_jLblHalfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_game_jLblHalfMouseClicked
        // TODO add your handling code here:
        if(cupsForThisTurn!=gameHandlerInstance.getActualPlayer().getCupsLeft()){
            infoBox("Vedd vissza a poharaid!");
            return;
        }    
        useAnswerToHalfHelp();
        game_jLblHalf.setVisible(false);
    }//GEN-LAST:event_game_jLblHalfMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    jFramePlayerInstance = new JFramePlayer();
                    jFramePlayerInstance.start();
                } catch (IOException ex) {
                    Logger.getLogger(JFramePlayer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void start() {
        jFramePlayerInstance.setVisible(true);
    }

    ///SAJÁT ELJÁRÁSOK
    protected void generateGameFrame() {
        try {
            gameHandlerInstance.setNewQuestion();
        } catch (Exception ex) {
            ex.getMessage();
        }

        cupsForThisTurn = gameHandlerInstance.getActualPlayer().getCupsLeft();

        if(gameHandlerInstance.getActualPlayer().getIsHalfingUsed())
        {
            game_jLblHalf.setVisible(false);
        }
        else
        {
            game_jLblHalf.setVisible(true);
        }
        
        game_jLblGameName.setText("Játék neve: " + gameHandlerInstance.getGame().getGameName());
        game_jLblPlayerName.setText("Játékos neve: " + gameHandlerInstance.getActualPlayer().getPlayerName());
        game_jLblQuestion.setText(gameHandlerInstance.getActualQuestion().getQuestion());
        game_jLblPoint.setText("Pontok: " + gameHandlerInstance.getActualPlayer().getScore());
        game_jLblCupNumber.setText(cupsForThisTurn + "/" + gameHandlerInstance.getActualPlayer().getCupsLeft());
        game_jLblRefillNumber.setText("" + gameHandlerInstance.getActualPlayer().getRefillsLeft());

        generateAnswerPanels(game_kGrdntPnl,
                convertSeparatedStringToStringArray(gameHandlerInstance.getActualQuestion().getAnswers()));

        gameHandlerInstance.callFromPlayerToHost_PlayerGameStarted();
    }

    @Override
    protected void addCups(JLabel label, int index) {
        if (cupsForThisTurn > 0) {
            cupsForThisTurn--;
            label.setText(Integer.toString(Integer.parseInt(label.getText()) + 1));
            sendCupsChange(index, label.getText());
        }

    }

    @Override
    protected void subtractCups(JLabel label, int index) {
        if (Integer.parseInt(label.getText()) > 0) {
            cupsForThisTurn++;
            label.setText(Integer.toString(Integer.parseInt(label.getText()) - 1));
            sendCupsChange(index, label.getText());
        }
    }

    private void sendCupsChange(int index, String cups) {
        String[] cupsOnAnswers = gameHandlerInstance.getPickedAnswersAsCups();
        cupsOnAnswers[index] = cups;
        gameHandlerInstance.setPickedAnswers(cupsOnAnswers);
        game_jLblCupNumber.setText(cupsForThisTurn + "/" + gameHandlerInstance.getActualPlayer().getCupsLeft());
    }

    private void imageScaler() {
        scaleImageInLabel(".//resources/images/half.png", game_jLblHalf);
        scaleImageInLabel(".//resources/images/call.png", game_jLblCall);
        scaleImageInLabel(".//resources/images/group.png", game_jLblGroup);
        scaleImageInLabel(".//resources/images/shot.png", game_jLblCup);
        scaleImageInLabel(".//resources/images/refill.png", game_jLblRefill);
        scaleImageInLabel(".//resources/images/gold.png", scores_jLblGold);
        scaleImageInLabel(".//resources/images/silver.png", scores_jLblSilver);
        scaleImageInLabel(".//resources/images/bronze.png", scores_jLblBronze);
    }

    public void generateScoreFrame()
    {
        setTopThree();
        fillScoreList();
        scores_jLblGameNameHasEnded.setText(gameHandlerInstance.getGame().getGameName() + " véget ért!");
    }
    
    private void setTopThree() {
        List<Player> players = sortScores();

        int[] scores = new int[players.size()];
        for (int i = 0; i < players.size(); ++i) {
            scores[i] = players.get(i).getScore();
        }
        int[] noDuplicatesScores = IntStream.of(scores).distinct().toArray();
        String[] playersOnPodium = new String[]{"", "", ""};
        for (Player p : players) {
            for (int i = 0; i < 3; ++i) {
                if (noDuplicatesScores.length > i && p.getScore() == noDuplicatesScores[i]) {
                    playersOnPodium[i] += p.getPlayerName();
                    playersOnPodium[i] += "; ";
                }
            }
        }

        scores_jLblFirstPlaceScore.setText("" + noDuplicatesScores[0]);
        if (noDuplicatesScores.length > 1) {
            scores_jLblSecondPlaceScore.setText("" + noDuplicatesScores[1]);
        }
        if (noDuplicatesScores.length > 2) {
            scores_jLblThirdPlaceScore.setText("" + noDuplicatesScores[2]);
        }

        scores_jLblFirstPlace.setText(playersOnPodium[0]);
        scores_jLblSecondPlace.setText(playersOnPodium[1]);
        scores_jLblThirdPlace.setText(playersOnPodium[2]);
    }
    
    private List<Player> sortScores(){
        List<Player> players = new ArrayList<Player>(gameHandlerInstance.getGamePlayers());
        players.sort(Comparator.comparing(Player::getScore).reversed());
        return players;
    }
    
    public void fillScoreList(){
        List<Player> players = sortScores();
        DefaultListModel dlsm = new DefaultListModel();
        
        for(Player p : players){         
             dlsm.addElement(p.getPlayerName()+ ": " + p.getScore());
        }
        scores_jLstScoreBoard.setModel(dlsm);
    }

    protected void useAnswerToHalfHelp() {
        List<KGradientPanel> answerPanels = getAnswerPanels(game_kGrdntPnl);
        int howManyAnswer = answerPanels.size();
        int howManyDelete = howManyAnswer % 2 == 0 ? howManyAnswer / 2 : (howManyAnswer - 1) / 2;
        int index = -1;
        List<Integer> indexes = new ArrayList<Integer>();
        for (int i = 0; i < howManyAnswer; ++i) {
            indexes.add(i);
            JLabel label = (JLabel) answerPanels.get(i).getComponent(0);
            if (label.getText().equals(gameHandlerInstance.getActualAnswer())) {
                index = i;
            }
        }
        indexes.remove(index);
        Collections.shuffle(indexes);

        List<Integer> indexesToRemove = new ArrayList<Integer>();
        for (int i = 0; i < howManyDelete; ++i) {
            indexesToRemove.add(indexes.get(i));
        }

        turnOffSpecifiecAnswerPanels(game_kGrdntPnl, indexesToRemove);
        gameHandlerInstance.callFromPlayerToHost_HalfHelpUsed(indexesToRemove);
    }
    
    ///SAJÁT ELJÁRÁSOK VÉGE
    ///EVENTEK
    public void receive_RevealAnswer() {
        revealAnswerPanelColor(game_kGrdntPnl);
        game_jLblPoint.setText("Pontok: " + gameHandlerInstance.getActualPlayer().getScore());
    }

    public void receive_NextPlayerRound() {
        generateGameFrame();
    }

    public void receive_PlayerGameEnded() {
        playerFinished_jLblPlayerName.setText("Gratulálunk, " + gameHandlerInstance.getActualPlayer().getPlayerName());
        playerFinished_jLblEarnedPoints.setText("Elért pontjaid: " + gameHandlerInstance.getActualPlayer().getScore());
        switchPanelView(game_kGrdntPnl, playerFinished_kGrdntPnl);
    }

    public void receive_CreateNewPlayer() {
        switchPanelView(playerFinished_kGrdntPnl, newPlayer_kGrdntPnl);
        newPlayer_jTxtFldPlayerName.setText("Írd be a neved!");
    }

    public void receive_GameEnded() {
        generateScoreFrame();
        switchPanelView(playerFinished_kGrdntPnl, scores_kGrdntPnl);
    }
    ///EVENTEK VÉGE
    public static void showOnScreen(int screen, JFrame frame) {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice[] gd = ge.getScreenDevices();

        if (screen > -1 && screen < gd.length) {
            //gd[screen].setFullScreenWindow(frame);
            frame.setLocation(gd[screen].getDefaultConfiguration().getBounds().x, frame.getY());
        } else if (gd.length > 0) {
            //gd[0].setFullScreenWindow(frame);
            frame.setLocation(gd[0].getDefaultConfiguration().getBounds().x, frame.getY());
        } else {
            throw new RuntimeException("No screen found!");
        }
    }

    private static class NoSelectionModel extends DefaultListSelectionModel {

        private NoSelectionModel() {
        }

        @Override
        public void setAnchorSelectionIndex(final int anchorIndex) {
        }

        @Override
        public void setLeadAnchorNotificationEnabled(final boolean flag) {
        }

        @Override
        public void setLeadSelectionIndex(final int leadIndex) {
        }

        @Override
        public void setSelectionInterval(final int index0, final int index1) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.utils.ComponentMoverUtil componentMoverUtil1;
    private javax.swing.JLabel game_jLblCall;
    private javax.swing.JLabel game_jLblCup;
    private javax.swing.JLabel game_jLblCupNumber;
    private javax.swing.JLabel game_jLblGameName;
    private javax.swing.JLabel game_jLblGroup;
    private javax.swing.JLabel game_jLblHalf;
    private javax.swing.JLabel game_jLblPlayerName;
    private javax.swing.JLabel game_jLblPoint;
    private javax.swing.JLabel game_jLblQuestion;
    private javax.swing.JLabel game_jLblRefill;
    private javax.swing.JLabel game_jLblRefillNumber;
    private com.k33ptoo.components.KGradientPanel game_kGrdntPnl;
    private javax.swing.JLayeredPane jLyrdPn;
    private javax.swing.JTextField newPlayer_jTxtFldPlayerName;
    private com.k33ptoo.components.KButton newPlayer_kBttnStart;
    private com.k33ptoo.components.KGradientPanel newPlayer_kGrdntPnl;
    private javax.swing.JLabel playerFinished_jLblEarnedPoints;
    private javax.swing.JLabel playerFinished_jLblGameOver;
    private javax.swing.JLabel playerFinished_jLblPlayerName;
    private com.k33ptoo.components.KGradientPanel playerFinished_kGrdntPnl;
    private javax.swing.JLabel scores_JLblLogo;
    private javax.swing.JLabel scores_jLblBronze;
    private javax.swing.JLabel scores_jLblFirstPlace;
    private javax.swing.JLabel scores_jLblFirstPlaceScore;
    private javax.swing.JLabel scores_jLblGameNameHasEnded;
    private javax.swing.JLabel scores_jLblGold;
    private javax.swing.JLabel scores_jLblSecondPlace;
    private javax.swing.JLabel scores_jLblSecondPlaceScore;
    private javax.swing.JLabel scores_jLblSilver;
    private javax.swing.JLabel scores_jLblThirdPlace;
    private javax.swing.JLabel scores_jLblThirdPlaceScore;
    private javax.swing.JList<String> scores_jLstScoreBoard;
    private javax.swing.JScrollPane scores_jScrllPn;
    private com.k33ptoo.components.KButton scores_kBttnMenu;
    private com.k33ptoo.components.KGradientPanel scores_kGrdntPnl;
    // End of variables declaration//GEN-END:variables
}
