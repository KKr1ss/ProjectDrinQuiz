/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Enums.Resolutions;
import javax.swing.*;
import Helpers.GameGenerator;
import Helpers.GameHandler;
import Helpers.DatabaseHandler;
import Helpers.GameLoader;
import Helpers.UserProperties;
import static Helpers.ViewHelper.infoBox;
import static Helpers.ViewHelper.scaleImageInLabel;
import static Helpers.ViewHelper.switchPanelView;
import Models.Game;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Component;
import java.awt.Dimension;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;

/**
 *
 * @author Jani
 */
//Játék főmenüje
public class JFrameMain extends javax.swing.JFrame {

    Game game;
    GameGenerator gameGenerator;
    GameLoader gameLoader;
    DatabaseHandler databaseHandler;

    ImageIcon icon = new ImageIcon(".//resources/images/icon.png");

    public JFrameMain() {
        initComponents();
        GameHandler.gameHandlerInstance = new GameHandler();

        gameGenerator = new GameGenerator();
        gameLoader = new GameLoader();
        databaseHandler = new DatabaseHandler();

        loadGame_kGrdntPnl.setVisible(false);
        settings_kGrdntPnl.setVisible(false);
        newGame_kGrdntPnlSources.setVisible(false);
        newGame_kGrdntPnlCategories.setVisible(false);
        newGame_kGrdntPnlGameName.setVisible(false);

        scaleImageInLabel(".//resources/images/hint.png", menu_jLblHint);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLyrdPn = new javax.swing.JLayeredPane();
        menu_kGrdntPnl = new com.k33ptoo.components.KGradientPanel();
        menu_bttnExit = new com.k33ptoo.components.KButton();
        menu_bttnSettings = new com.k33ptoo.components.KButton();
        menu_bttnLoadGame = new com.k33ptoo.components.KButton();
        menu_bttnNewGame = new com.k33ptoo.components.KButton();
        menu_JLblLogo = new javax.swing.JLabel();
        menu_jLblHint = new javax.swing.JLabel();
        newGame_jLyrdPn = new javax.swing.JLayeredPane();
        newGame_kGrdntPnlSources = new com.k33ptoo.components.KGradientPanel();
        newGame_Sources_kBttnBack = new com.k33ptoo.components.KButton();
        newGame_Sources_kBttnNext = new com.k33ptoo.components.KButton();
        newGame_Sources_JLblLogo = new javax.swing.JLabel();
        newGame_Sources_kBttnSelectAllCheckbox = new com.k33ptoo.components.KButton();
        newGame_Sources_kBttnUnselectAllCheckbox = new com.k33ptoo.components.KButton();
        newGame_Sources_jLblChooseSource = new javax.swing.JLabel();
        newGame_kGrdntPnlCategories = new com.k33ptoo.components.KGradientPanel();
        newGame_Categories_kBttnBack = new com.k33ptoo.components.KButton();
        newGame_Categories_kBttnNext = new com.k33ptoo.components.KButton();
        newGame_Categories_JLblLogo = new javax.swing.JLabel();
        newGame_Categories_kBttnSelectAllCheckbox = new com.k33ptoo.components.KButton();
        newGame_Categories_kBttnUnselectAllCheckbox = new com.k33ptoo.components.KButton();
        newGame_Categories_jLblChooseSource = new javax.swing.JLabel();
        newGame_kGrdntPnlGameName = new com.k33ptoo.components.KGradientPanel();
        newGame_GameName_kBttnStart = new com.k33ptoo.components.KButton();
        newGame_GameName_kBttnBack = new com.k33ptoo.components.KButton();
        newGame_GameName_jTxtFldGameName = new javax.swing.JTextField();
        newGame_GameName_JLblLogo = new javax.swing.JLabel();
        newGame_GameName_jLblRefillNumber = new javax.swing.JLabel();
        newGame_GameName_jLblCupNumber = new javax.swing.JLabel();
        newGame_GameName_jTxtFldCupNumber = new javax.swing.JTextField();
        newGame_GameName_jTxtFldRefillNumber = new javax.swing.JTextField();
        loadGame_kGrdntPnl = new com.k33ptoo.components.KGradientPanel();
        loadGame_kBttnBack = new com.k33ptoo.components.KButton();
        loadGame_JLblLogo = new javax.swing.JLabel();
        loadGame_jScrllPn = new javax.swing.JScrollPane();
        loadGame_jLstPreviousGames = new javax.swing.JList<>();
        loadGame_kBttnLoadGame = new com.k33ptoo.components.KButton();
        loadGame_kBttnDeleteGame = new com.k33ptoo.components.KButton();
        settings_kGrdntPnl = new com.k33ptoo.components.KGradientPanel();
        settings_kBttnBack = new com.k33ptoo.components.KButton();
        settings_kBttnImportQuizes = new com.k33ptoo.components.KButton();
        settings_jLblImportQuizes = new javax.swing.JLabel();
        settings_kBttnImportQuizesFromNapiKviz = new com.k33ptoo.components.KButton();
        settings_jLblImportQuizesFromNapiKviz = new javax.swing.JLabel();
        settings_kBttnClearQuestion = new com.k33ptoo.components.KButton();
        settings_jLblClearQuestion = new javax.swing.JLabel();
        settings_kBttnClearGames = new com.k33ptoo.components.KButton();
        settings_jLblClearGames = new javax.swing.JLabel();
        settings_jLblPlayerFrameSize = new javax.swing.JLabel();
        settings_jLblHostFrameSize = new javax.swing.JLabel();
        settings_jCmbBxPlayerFrameSize = new javax.swing.JComboBox<>();
        settings_jCmbBxHostFrameSize = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Főmenü");
        setBounds(new java.awt.Rectangle(0, 0, 800, 600));
        setIconImage(icon.getImage());
        setName("frame"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        menu_kGrdntPnl.setkEndColor(new java.awt.Color(25, 25, 112));
        menu_kGrdntPnl.setkGradientFocus(1000);
        menu_kGrdntPnl.setkStartColor(new java.awt.Color(128, 0, 128));

        menu_bttnExit.setBorder(null);
        menu_bttnExit.setText("Kilépés");
        menu_bttnExit.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        menu_bttnExit.setkBorderRadius(50);
        menu_bttnExit.setkEndColor(new java.awt.Color(72, 61, 139));
        menu_bttnExit.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        menu_bttnExit.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        menu_bttnExit.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        menu_bttnExit.setkIndicatorThickness(0);
        menu_bttnExit.setkStartColor(new java.awt.Color(65, 105, 255));
        menu_bttnExit.setPreferredSize(new java.awt.Dimension(200, 50));
        menu_bttnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_bttnExitMouseClicked(evt);
            }
        });

        menu_bttnSettings.setBorder(null);
        menu_bttnSettings.setText("Beállítások");
        menu_bttnSettings.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        menu_bttnSettings.setkBorderRadius(50);
        menu_bttnSettings.setkEndColor(new java.awt.Color(72, 61, 139));
        menu_bttnSettings.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        menu_bttnSettings.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        menu_bttnSettings.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        menu_bttnSettings.setkIndicatorThickness(0);
        menu_bttnSettings.setkStartColor(new java.awt.Color(65, 105, 255));
        menu_bttnSettings.setPreferredSize(new java.awt.Dimension(200, 50));
        menu_bttnSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_bttnSettingsMouseClicked(evt);
            }
        });

        menu_bttnLoadGame.setBorder(null);
        menu_bttnLoadGame.setText("Játék betöltése");
        menu_bttnLoadGame.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        menu_bttnLoadGame.setkBorderRadius(50);
        menu_bttnLoadGame.setkEndColor(new java.awt.Color(72, 61, 139));
        menu_bttnLoadGame.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        menu_bttnLoadGame.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        menu_bttnLoadGame.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        menu_bttnLoadGame.setkIndicatorThickness(0);
        menu_bttnLoadGame.setkStartColor(new java.awt.Color(65, 105, 255));
        menu_bttnLoadGame.setPreferredSize(new java.awt.Dimension(200, 50));
        menu_bttnLoadGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_bttnLoadGameMouseClicked(evt);
            }
        });

        menu_bttnNewGame.setBorder(null);
        menu_bttnNewGame.setText("Új játék");
        menu_bttnNewGame.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        menu_bttnNewGame.setkBorderRadius(50);
        menu_bttnNewGame.setkEndColor(new java.awt.Color(72, 61, 139));
        menu_bttnNewGame.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        menu_bttnNewGame.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        menu_bttnNewGame.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        menu_bttnNewGame.setkIndicatorThickness(0);
        menu_bttnNewGame.setkStartColor(new java.awt.Color(65, 105, 255));
        menu_bttnNewGame.setPreferredSize(new java.awt.Dimension(200, 50));
        menu_bttnNewGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_bttnNewGameMouseClicked(evt);
            }
        });

        menu_JLblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menu_JLblLogo.setIcon(new ImageIcon("resources/images/DrinQuiz.gif"));

        menu_jLblHint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menu_jLblHint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menu_jLblHint.setPreferredSize(new java.awt.Dimension(50, 50));
        menu_jLblHint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_jLblHintMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout menu_kGrdntPnlLayout = new javax.swing.GroupLayout(menu_kGrdntPnl);
        menu_kGrdntPnl.setLayout(menu_kGrdntPnlLayout);
        menu_kGrdntPnlLayout.setHorizontalGroup(
            menu_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menu_kGrdntPnlLayout.createSequentialGroup()
                .addGroup(menu_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menu_kGrdntPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(menu_jLblHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(menu_bttnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_kGrdntPnlLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addGroup(menu_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(menu_bttnSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menu_bttnLoadGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menu_bttnNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 294, Short.MAX_VALUE))
                    .addGroup(menu_kGrdntPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(menu_JLblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        menu_kGrdntPnlLayout.setVerticalGroup(
            menu_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menu_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menu_JLblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(menu_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menu_kGrdntPnlLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(menu_bttnNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(menu_bttnLoadGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(menu_bttnSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addComponent(menu_bttnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_kGrdntPnlLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(menu_jLblHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        newGame_kGrdntPnlSources.setkEndColor(new java.awt.Color(25, 25, 112));
        newGame_kGrdntPnlSources.setkGradientFocus(1000);
        newGame_kGrdntPnlSources.setkStartColor(new java.awt.Color(128, 0, 128));

        newGame_Sources_kBttnBack.setBorder(null);
        newGame_Sources_kBttnBack.setText("Vissza");
        newGame_Sources_kBttnBack.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Sources_kBttnBack.setkBorderRadius(50);
        newGame_Sources_kBttnBack.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnBack.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnBack.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Sources_kBttnBack.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnBack.setkIndicatorThickness(0);
        newGame_Sources_kBttnBack.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnBack.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Sources_kBttnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Sources_kBttnBackMouseClicked(evt);
            }
        });

        newGame_Sources_kBttnNext.setBorder(null);
        newGame_Sources_kBttnNext.setText("Következő");
        newGame_Sources_kBttnNext.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Sources_kBttnNext.setkBorderRadius(50);
        newGame_Sources_kBttnNext.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnNext.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnNext.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Sources_kBttnNext.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnNext.setkIndicatorThickness(0);
        newGame_Sources_kBttnNext.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnNext.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Sources_kBttnNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Sources_kBttnNextMouseClicked(evt);
            }
        });

        newGame_Sources_JLblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newGame_Sources_JLblLogo.setIcon(new ImageIcon("resources/images/DrinQuiz.gif"));

        newGame_Sources_kBttnSelectAllCheckbox.setBorder(null);
        newGame_Sources_kBttnSelectAllCheckbox.setText("Összes kijelölése");
        newGame_Sources_kBttnSelectAllCheckbox.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Sources_kBttnSelectAllCheckbox.setkBorderRadius(50);
        newGame_Sources_kBttnSelectAllCheckbox.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnSelectAllCheckbox.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnSelectAllCheckbox.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Sources_kBttnSelectAllCheckbox.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnSelectAllCheckbox.setkIndicatorThickness(0);
        newGame_Sources_kBttnSelectAllCheckbox.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnSelectAllCheckbox.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Sources_kBttnSelectAllCheckbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Sources_kBttnSelectAllCheckboxMouseClicked(evt);
            }
        });

        newGame_Sources_kBttnUnselectAllCheckbox.setBorder(null);
        newGame_Sources_kBttnUnselectAllCheckbox.setText("Kijelölések törlése");
        newGame_Sources_kBttnUnselectAllCheckbox.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Sources_kBttnUnselectAllCheckbox.setkBorderRadius(50);
        newGame_Sources_kBttnUnselectAllCheckbox.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnUnselectAllCheckbox.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnUnselectAllCheckbox.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Sources_kBttnUnselectAllCheckbox.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Sources_kBttnUnselectAllCheckbox.setkIndicatorThickness(0);
        newGame_Sources_kBttnUnselectAllCheckbox.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Sources_kBttnUnselectAllCheckbox.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Sources_kBttnUnselectAllCheckbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Sources_kBttnUnselectAllCheckboxMouseClicked(evt);
            }
        });

        newGame_Sources_jLblChooseSource.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Sources_jLblChooseSource.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        newGame_Sources_jLblChooseSource.setText("Válassz forrást a kvízhez!");
        newGame_Sources_jLblChooseSource.setPreferredSize(new java.awt.Dimension(350, 50));

        javax.swing.GroupLayout newGame_kGrdntPnlSourcesLayout = new javax.swing.GroupLayout(newGame_kGrdntPnlSources);
        newGame_kGrdntPnlSources.setLayout(newGame_kGrdntPnlSourcesLayout);
        newGame_kGrdntPnlSourcesLayout.setHorizontalGroup(
            newGame_kGrdntPnlSourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newGame_kGrdntPnlSourcesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newGame_kGrdntPnlSourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newGame_Sources_JLblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newGame_kGrdntPnlSourcesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newGame_Sources_kBttnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newGame_Sources_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newGame_kGrdntPnlSourcesLayout.createSequentialGroup()
                        .addComponent(newGame_Sources_jLblChooseSource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)
                        .addComponent(newGame_Sources_kBttnSelectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newGame_Sources_kBttnUnselectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        newGame_kGrdntPnlSourcesLayout.setVerticalGroup(
            newGame_kGrdntPnlSourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newGame_kGrdntPnlSourcesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newGame_Sources_JLblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(newGame_kGrdntPnlSourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGame_Sources_kBttnUnselectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_Sources_kBttnSelectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_Sources_jLblChooseSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 270, Short.MAX_VALUE)
                .addGroup(newGame_kGrdntPnlSourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGame_Sources_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_Sources_kBttnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        newGame_kGrdntPnlCategories.setkEndColor(new java.awt.Color(25, 25, 112));
        newGame_kGrdntPnlCategories.setkGradientFocus(1000);
        newGame_kGrdntPnlCategories.setkStartColor(new java.awt.Color(128, 0, 128));

        newGame_Categories_kBttnBack.setBorder(null);
        newGame_Categories_kBttnBack.setText("Vissza");
        newGame_Categories_kBttnBack.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Categories_kBttnBack.setkBorderRadius(50);
        newGame_Categories_kBttnBack.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnBack.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnBack.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Categories_kBttnBack.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnBack.setkIndicatorThickness(0);
        newGame_Categories_kBttnBack.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnBack.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Categories_kBttnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Categories_kBttnBackMouseClicked(evt);
            }
        });

        newGame_Categories_kBttnNext.setBorder(null);
        newGame_Categories_kBttnNext.setText("Következő");
        newGame_Categories_kBttnNext.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Categories_kBttnNext.setkBorderRadius(50);
        newGame_Categories_kBttnNext.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnNext.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnNext.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Categories_kBttnNext.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnNext.setkIndicatorThickness(0);
        newGame_Categories_kBttnNext.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnNext.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Categories_kBttnNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Categories_kBttnNextMouseClicked(evt);
            }
        });

        newGame_Categories_JLblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newGame_Categories_JLblLogo.setIcon(new ImageIcon("resources/images/DrinQuiz.gif"));

        newGame_Categories_kBttnSelectAllCheckbox.setBorder(null);
        newGame_Categories_kBttnSelectAllCheckbox.setText("Összes kijelölése");
        newGame_Categories_kBttnSelectAllCheckbox.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Categories_kBttnSelectAllCheckbox.setkBorderRadius(50);
        newGame_Categories_kBttnSelectAllCheckbox.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnSelectAllCheckbox.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnSelectAllCheckbox.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Categories_kBttnSelectAllCheckbox.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnSelectAllCheckbox.setkIndicatorThickness(0);
        newGame_Categories_kBttnSelectAllCheckbox.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnSelectAllCheckbox.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Categories_kBttnSelectAllCheckbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Categories_kBttnSelectAllCheckboxMouseClicked(evt);
            }
        });

        newGame_Categories_kBttnUnselectAllCheckbox.setBorder(null);
        newGame_Categories_kBttnUnselectAllCheckbox.setText("Kijelölések törlése");
        newGame_Categories_kBttnUnselectAllCheckbox.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Categories_kBttnUnselectAllCheckbox.setkBorderRadius(50);
        newGame_Categories_kBttnUnselectAllCheckbox.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnUnselectAllCheckbox.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnUnselectAllCheckbox.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_Categories_kBttnUnselectAllCheckbox.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_Categories_kBttnUnselectAllCheckbox.setkIndicatorThickness(0);
        newGame_Categories_kBttnUnselectAllCheckbox.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_Categories_kBttnUnselectAllCheckbox.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_Categories_kBttnUnselectAllCheckbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_Categories_kBttnUnselectAllCheckboxMouseClicked(evt);
            }
        });

        newGame_Categories_jLblChooseSource.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_Categories_jLblChooseSource.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        newGame_Categories_jLblChooseSource.setText("Válassz kategóriát a kvízhez!");
        newGame_Categories_jLblChooseSource.setPreferredSize(new java.awt.Dimension(350, 50));

        javax.swing.GroupLayout newGame_kGrdntPnlCategoriesLayout = new javax.swing.GroupLayout(newGame_kGrdntPnlCategories);
        newGame_kGrdntPnlCategories.setLayout(newGame_kGrdntPnlCategoriesLayout);
        newGame_kGrdntPnlCategoriesLayout.setHorizontalGroup(
            newGame_kGrdntPnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newGame_kGrdntPnlCategoriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newGame_kGrdntPnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newGame_Categories_JLblLogo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newGame_kGrdntPnlCategoriesLayout.createSequentialGroup()
                        .addComponent(newGame_Categories_jLblChooseSource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)
                        .addComponent(newGame_Categories_kBttnSelectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newGame_Categories_kBttnUnselectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newGame_kGrdntPnlCategoriesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newGame_Categories_kBttnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newGame_Categories_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        newGame_kGrdntPnlCategoriesLayout.setVerticalGroup(
            newGame_kGrdntPnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newGame_kGrdntPnlCategoriesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newGame_Categories_JLblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(newGame_kGrdntPnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGame_Categories_kBttnUnselectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_Categories_kBttnSelectAllCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_Categories_jLblChooseSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(270, 270, 270)
                .addGroup(newGame_kGrdntPnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGame_Categories_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_Categories_kBttnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        newGame_kGrdntPnlGameName.setkEndColor(new java.awt.Color(25, 25, 112));
        newGame_kGrdntPnlGameName.setkGradientFocus(1000);
        newGame_kGrdntPnlGameName.setkStartColor(new java.awt.Color(128, 0, 128));

        newGame_GameName_kBttnStart.setBorder(null);
        newGame_GameName_kBttnStart.setText("Játék indítása");
        newGame_GameName_kBttnStart.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_GameName_kBttnStart.setkBorderRadius(50);
        newGame_GameName_kBttnStart.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_GameName_kBttnStart.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_GameName_kBttnStart.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_GameName_kBttnStart.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_GameName_kBttnStart.setkIndicatorThickness(0);
        newGame_GameName_kBttnStart.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_GameName_kBttnStart.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_GameName_kBttnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_GameName_kBttnStartMouseClicked(evt);
            }
        });

        newGame_GameName_kBttnBack.setBorder(null);
        newGame_GameName_kBttnBack.setText("Vissza");
        newGame_GameName_kBttnBack.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_GameName_kBttnBack.setkBorderRadius(50);
        newGame_GameName_kBttnBack.setkEndColor(new java.awt.Color(72, 61, 139));
        newGame_GameName_kBttnBack.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        newGame_GameName_kBttnBack.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        newGame_GameName_kBttnBack.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        newGame_GameName_kBttnBack.setkIndicatorThickness(0);
        newGame_GameName_kBttnBack.setkStartColor(new java.awt.Color(65, 105, 255));
        newGame_GameName_kBttnBack.setPreferredSize(new java.awt.Dimension(200, 50));
        newGame_GameName_kBttnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_GameName_kBttnBackMouseClicked(evt);
            }
        });

        newGame_GameName_jTxtFldGameName.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_GameName_jTxtFldGameName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newGame_GameName_jTxtFldGameName.setText("Add meg a játék nevét!");
        newGame_GameName_jTxtFldGameName.setPreferredSize(new java.awt.Dimension(300, 50));
        newGame_GameName_jTxtFldGameName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_GameName_jTxtFldGameNameMouseClicked(evt);
            }
        });

        newGame_GameName_JLblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newGame_GameName_JLblLogo.setIcon(new ImageIcon("resources/images/DrinQuiz.gif"));

        newGame_GameName_jLblRefillNumber.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_GameName_jLblRefillNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newGame_GameName_jLblRefillNumber.setText("Hányszor lehessen újratölteni a poharakat?");
        newGame_GameName_jLblRefillNumber.setPreferredSize(new java.awt.Dimension(400, 50));

        newGame_GameName_jLblCupNumber.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_GameName_jLblCupNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newGame_GameName_jLblCupNumber.setText("Hány pohara legyen a játékosoknak?");
        newGame_GameName_jLblCupNumber.setPreferredSize(new java.awt.Dimension(400, 50));

        newGame_GameName_jTxtFldCupNumber.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_GameName_jTxtFldCupNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newGame_GameName_jTxtFldCupNumber.setText("10");
        newGame_GameName_jTxtFldCupNumber.setPreferredSize(new java.awt.Dimension(50, 50));
        newGame_GameName_jTxtFldCupNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_GameName_jTxtFldCupNumberMouseClicked(evt);
            }
        });

        newGame_GameName_jTxtFldRefillNumber.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        newGame_GameName_jTxtFldRefillNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newGame_GameName_jTxtFldRefillNumber.setText("1");
        newGame_GameName_jTxtFldRefillNumber.setPreferredSize(new java.awt.Dimension(50, 50));
        newGame_GameName_jTxtFldRefillNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGame_GameName_jTxtFldRefillNumberMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout newGame_kGrdntPnlGameNameLayout = new javax.swing.GroupLayout(newGame_kGrdntPnlGameName);
        newGame_kGrdntPnlGameName.setLayout(newGame_kGrdntPnlGameNameLayout);
        newGame_kGrdntPnlGameNameLayout.setHorizontalGroup(
            newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                .addGroup(newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newGame_GameName_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(newGame_GameName_JLblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                        .addGroup(newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addGroup(newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newGame_GameName_jLblCupNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newGame_GameName_jLblRefillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newGame_GameName_jTxtFldRefillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newGame_GameName_jTxtFldCupNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                                .addGap(250, 250, 250)
                                .addComponent(newGame_GameName_jTxtFldGameName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                                .addGap(300, 300, 300)
                                .addComponent(newGame_GameName_kBttnStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 163, Short.MAX_VALUE)))
                .addContainerGap())
        );
        newGame_kGrdntPnlGameNameLayout.setVerticalGroup(
            newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newGame_kGrdntPnlGameNameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newGame_GameName_JLblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGame_GameName_jLblCupNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_GameName_jTxtFldCupNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newGame_kGrdntPnlGameNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGame_GameName_jLblRefillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame_GameName_jTxtFldRefillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(newGame_GameName_jTxtFldGameName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newGame_GameName_kBttnStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(newGame_GameName_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        newGame_jLyrdPn.setLayer(newGame_kGrdntPnlSources, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newGame_jLyrdPn.setLayer(newGame_kGrdntPnlCategories, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newGame_jLyrdPn.setLayer(newGame_kGrdntPnlGameName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout newGame_jLyrdPnLayout = new javax.swing.GroupLayout(newGame_jLyrdPn);
        newGame_jLyrdPn.setLayout(newGame_jLyrdPnLayout);
        newGame_jLyrdPnLayout.setHorizontalGroup(
            newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_kGrdntPnlSources, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_kGrdntPnlCategories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_kGrdntPnlGameName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newGame_jLyrdPnLayout.setVerticalGroup(
            newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_kGrdntPnlSources, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_kGrdntPnlCategories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(newGame_jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_kGrdntPnlGameName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loadGame_kGrdntPnl.setkEndColor(new java.awt.Color(25, 25, 112));
        loadGame_kGrdntPnl.setkGradientFocus(1000);
        loadGame_kGrdntPnl.setkStartColor(new java.awt.Color(128, 0, 128));

        loadGame_kBttnBack.setBorder(null);
        loadGame_kBttnBack.setText("Vissza");
        loadGame_kBttnBack.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        loadGame_kBttnBack.setkBorderRadius(50);
        loadGame_kBttnBack.setkEndColor(new java.awt.Color(72, 61, 139));
        loadGame_kBttnBack.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        loadGame_kBttnBack.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        loadGame_kBttnBack.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        loadGame_kBttnBack.setkIndicatorThickness(0);
        loadGame_kBttnBack.setkStartColor(new java.awt.Color(65, 105, 255));
        loadGame_kBttnBack.setPreferredSize(new java.awt.Dimension(200, 50));
        loadGame_kBttnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadGame_kBttnBackMouseClicked(evt);
            }
        });

        loadGame_JLblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadGame_JLblLogo.setIcon(new ImageIcon("resources/images/DrinQuiz.gif"));

        loadGame_jLstPreviousGames.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        loadGame_jLstPreviousGames.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        loadGame_jLstPreviousGames.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        loadGame_jScrllPn.setViewportView(loadGame_jLstPreviousGames);

        loadGame_kBttnLoadGame.setBorder(null);
        loadGame_kBttnLoadGame.setText("Játék betöltése");
        loadGame_kBttnLoadGame.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        loadGame_kBttnLoadGame.setkBorderRadius(50);
        loadGame_kBttnLoadGame.setkEndColor(new java.awt.Color(72, 61, 139));
        loadGame_kBttnLoadGame.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        loadGame_kBttnLoadGame.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        loadGame_kBttnLoadGame.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        loadGame_kBttnLoadGame.setkIndicatorThickness(0);
        loadGame_kBttnLoadGame.setkStartColor(new java.awt.Color(65, 105, 255));
        loadGame_kBttnLoadGame.setPreferredSize(new java.awt.Dimension(200, 50));
        loadGame_kBttnLoadGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadGame_kBttnLoadGameMouseClicked(evt);
            }
        });

        loadGame_kBttnDeleteGame.setBorder(null);
        loadGame_kBttnDeleteGame.setText("Játék törlése");
        loadGame_kBttnDeleteGame.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        loadGame_kBttnDeleteGame.setkBorderRadius(50);
        loadGame_kBttnDeleteGame.setkEndColor(new java.awt.Color(72, 61, 139));
        loadGame_kBttnDeleteGame.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        loadGame_kBttnDeleteGame.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        loadGame_kBttnDeleteGame.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        loadGame_kBttnDeleteGame.setkIndicatorThickness(0);
        loadGame_kBttnDeleteGame.setkStartColor(new java.awt.Color(65, 105, 255));
        loadGame_kBttnDeleteGame.setPreferredSize(new java.awt.Dimension(200, 50));
        loadGame_kBttnDeleteGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadGame_kBttnDeleteGameMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout loadGame_kGrdntPnlLayout = new javax.swing.GroupLayout(loadGame_kGrdntPnl);
        loadGame_kGrdntPnl.setLayout(loadGame_kGrdntPnlLayout);
        loadGame_kGrdntPnlLayout.setHorizontalGroup(
            loadGame_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadGame_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadGame_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadGame_kGrdntPnlLayout.createSequentialGroup()
                        .addComponent(loadGame_kBttnDeleteGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loadGame_kBttnLoadGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                        .addComponent(loadGame_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(loadGame_JLblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadGame_jScrllPn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE))
                .addContainerGap())
        );
        loadGame_kGrdntPnlLayout.setVerticalGroup(
            loadGame_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadGame_kGrdntPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadGame_JLblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loadGame_jScrllPn, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(loadGame_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadGame_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadGame_kBttnDeleteGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadGame_kBttnLoadGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        settings_kGrdntPnl.setkEndColor(new java.awt.Color(25, 25, 112));
        settings_kGrdntPnl.setkGradientFocus(1000);
        settings_kGrdntPnl.setkStartColor(new java.awt.Color(128, 0, 128));
        settings_kGrdntPnl.setkTransparentControls(false);

        settings_kBttnBack.setBorder(null);
        settings_kBttnBack.setText("Vissza");
        settings_kBttnBack.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_kBttnBack.setkBorderRadius(50);
        settings_kBttnBack.setkEndColor(new java.awt.Color(72, 61, 139));
        settings_kBttnBack.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        settings_kBttnBack.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        settings_kBttnBack.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        settings_kBttnBack.setkIndicatorThickness(0);
        settings_kBttnBack.setkStartColor(new java.awt.Color(65, 105, 255));
        settings_kBttnBack.setPreferredSize(new java.awt.Dimension(200, 50));
        settings_kBttnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settings_kBttnBackMouseClicked(evt);
            }
        });

        settings_kBttnImportQuizes.setBorder(null);
        settings_kBttnImportQuizes.setText("Importálás");
        settings_kBttnImportQuizes.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_kBttnImportQuizes.setkBorderRadius(50);
        settings_kBttnImportQuizes.setkEndColor(new java.awt.Color(72, 61, 139));
        settings_kBttnImportQuizes.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        settings_kBttnImportQuizes.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        settings_kBttnImportQuizes.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        settings_kBttnImportQuizes.setkIndicatorThickness(0);
        settings_kBttnImportQuizes.setkStartColor(new java.awt.Color(65, 105, 255));
        settings_kBttnImportQuizes.setPreferredSize(new java.awt.Dimension(200, 50));
        settings_kBttnImportQuizes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settings_kBttnImportQuizesMouseClicked(evt);
            }
        });

        settings_jLblImportQuizes.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jLblImportQuizes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        settings_jLblImportQuizes.setText("Kvízek importálása a webhelyekről:");
        settings_jLblImportQuizes.setPreferredSize(new java.awt.Dimension(350, 50));

        settings_kBttnImportQuizesFromNapiKviz.setBorder(null);
        settings_kBttnImportQuizesFromNapiKviz.setText("NapiKvíz");
        settings_kBttnImportQuizesFromNapiKviz.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_kBttnImportQuizesFromNapiKviz.setkBorderRadius(50);
        settings_kBttnImportQuizesFromNapiKviz.setkEndColor(new java.awt.Color(72, 61, 139));
        settings_kBttnImportQuizesFromNapiKviz.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        settings_kBttnImportQuizesFromNapiKviz.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        settings_kBttnImportQuizesFromNapiKviz.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        settings_kBttnImportQuizesFromNapiKviz.setkIndicatorThickness(0);
        settings_kBttnImportQuizesFromNapiKviz.setkStartColor(new java.awt.Color(65, 105, 255));
        settings_kBttnImportQuizesFromNapiKviz.setPreferredSize(new java.awt.Dimension(150, 50));
        settings_kBttnImportQuizesFromNapiKviz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settings_kBttnImportQuizesFromNapiKvizMouseClicked(evt);
            }
        });

        settings_jLblImportQuizesFromNapiKviz.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jLblImportQuizesFromNapiKviz.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        settings_jLblImportQuizesFromNapiKviz.setText("Kvízek importálása NapiKvízről:");
        settings_jLblImportQuizesFromNapiKviz.setPreferredSize(new java.awt.Dimension(350, 50));

        settings_kBttnClearQuestion.setBorder(null);
        settings_kBttnClearQuestion.setText("Kvízek törlése");
        settings_kBttnClearQuestion.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_kBttnClearQuestion.setkBorderRadius(50);
        settings_kBttnClearQuestion.setkEndColor(new java.awt.Color(72, 61, 139));
        settings_kBttnClearQuestion.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        settings_kBttnClearQuestion.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        settings_kBttnClearQuestion.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        settings_kBttnClearQuestion.setkIndicatorThickness(0);
        settings_kBttnClearQuestion.setkStartColor(new java.awt.Color(65, 105, 255));
        settings_kBttnClearQuestion.setPreferredSize(new java.awt.Dimension(200, 50));
        settings_kBttnClearQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settings_kBttnClearQuestionMouseClicked(evt);
            }
        });

        settings_jLblClearQuestion.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jLblClearQuestion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        settings_jLblClearQuestion.setText("Kvízek, adatok törlése");
        settings_jLblClearQuestion.setPreferredSize(new java.awt.Dimension(350, 50));

        settings_kBttnClearGames.setBorder(null);
        settings_kBttnClearGames.setText("Játékok törlése");
        settings_kBttnClearGames.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_kBttnClearGames.setkBorderRadius(50);
        settings_kBttnClearGames.setkEndColor(new java.awt.Color(72, 61, 139));
        settings_kBttnClearGames.setkHoverEndColor(new java.awt.Color(65, 105, 255));
        settings_kBttnClearGames.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        settings_kBttnClearGames.setkHoverStartColor(new java.awt.Color(72, 61, 139));
        settings_kBttnClearGames.setkIndicatorThickness(0);
        settings_kBttnClearGames.setkStartColor(new java.awt.Color(65, 105, 255));
        settings_kBttnClearGames.setPreferredSize(new java.awt.Dimension(200, 50));
        settings_kBttnClearGames.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settings_kBttnClearGamesMouseClicked(evt);
            }
        });

        settings_jLblClearGames.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jLblClearGames.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        settings_jLblClearGames.setText("Eddigi játékok törlése:");
        settings_jLblClearGames.setPreferredSize(new java.awt.Dimension(350, 50));

        settings_jLblPlayerFrameSize.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jLblPlayerFrameSize.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        settings_jLblPlayerFrameSize.setText("Állítsd be a játékos felbontását:");
        settings_jLblPlayerFrameSize.setPreferredSize(new java.awt.Dimension(350, 50));

        settings_jLblHostFrameSize.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jLblHostFrameSize.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        settings_jLblHostFrameSize.setText("Állítsd be a játékvezető felbontását:");
        settings_jLblHostFrameSize.setPreferredSize(new java.awt.Dimension(350, 50));

        settings_jCmbBxPlayerFrameSize.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jCmbBxPlayerFrameSize.setPreferredSize(new java.awt.Dimension(200, 50));
        settings_jCmbBxPlayerFrameSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_jCmbBxPlayerFrameSizeActionPerformed(evt);
            }
        });

        settings_jCmbBxHostFrameSize.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        settings_jCmbBxHostFrameSize.setPreferredSize(new java.awt.Dimension(200, 50));
        settings_jCmbBxHostFrameSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_jCmbBxHostFrameSizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settings_kGrdntPnlLayout = new javax.swing.GroupLayout(settings_kGrdntPnl);
        settings_kGrdntPnl.setLayout(settings_kGrdntPnlLayout);
        settings_kGrdntPnlLayout.setHorizontalGroup(
            settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_kGrdntPnlLayout.createSequentialGroup()
                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settings_kGrdntPnlLayout.createSequentialGroup()
                        .addContainerGap(594, Short.MAX_VALUE)
                        .addComponent(settings_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settings_kGrdntPnlLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(settings_kGrdntPnlLayout.createSequentialGroup()
                                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(settings_jLblClearQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settings_jLblClearGames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settings_jLblImportQuizesFromNapiKviz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settings_jLblImportQuizes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(settings_kBttnClearGames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settings_kBttnImportQuizes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settings_kBttnClearQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settings_kBttnImportQuizesFromNapiKviz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(settings_kGrdntPnlLayout.createSequentialGroup()
                                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(settings_jLblHostFrameSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settings_jLblPlayerFrameSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(settings_jCmbBxPlayerFrameSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(settings_jCmbBxHostFrameSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        settings_kGrdntPnlLayout.setVerticalGroup(
            settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settings_kGrdntPnlLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_jLblPlayerFrameSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_jCmbBxPlayerFrameSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_jLblHostFrameSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_jCmbBxHostFrameSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_kBttnImportQuizes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_jLblImportQuizes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_kBttnImportQuizesFromNapiKviz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_jLblImportQuizesFromNapiKviz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settings_kGrdntPnlLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(settings_kBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(settings_kGrdntPnlLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(settings_kBttnClearQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(settings_jLblClearQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(settings_kGrdntPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(settings_kBttnClearGames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(settings_jLblClearGames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(102, Short.MAX_VALUE))))
        );

        jLyrdPn.setLayer(menu_kGrdntPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLyrdPn.setLayer(newGame_jLyrdPn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLyrdPn.setLayer(loadGame_kGrdntPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLyrdPn.setLayer(settings_kGrdntPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLyrdPnLayout = new javax.swing.GroupLayout(jLyrdPn);
        jLyrdPn.setLayout(jLyrdPnLayout);
        jLyrdPnLayout.setHorizontalGroup(
            jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu_kGrdntPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(settings_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_jLyrdPn))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(loadGame_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLyrdPnLayout.setVerticalGroup(
            jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu_kGrdntPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(settings_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newGame_jLyrdPn))
            .addGroup(jLyrdPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(loadGame_kGrdntPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLyrdPn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLyrdPn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menu_bttnNewGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_bttnNewGameMouseClicked
        // TODO add your handling code here:

        String[] sources = gameGenerator.getSourcesInDatabase();
        if (sources.length == 0) {
            infoBox("Nincs kvíz az adatbázisban!");
            return;
        }

        addCheckboxesToPanel(newGame_kGrdntPnlSources, sources);

        switchPanelView(menu_kGrdntPnl, newGame_kGrdntPnlSources);
    }//GEN-LAST:event_menu_bttnNewGameMouseClicked

    private void menu_bttnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_bttnExitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menu_bttnExitMouseClicked

    private void newGame_Sources_kBttnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Sources_kBttnBackMouseClicked
        // TODO add your handling code here:
        switchPanelView(newGame_kGrdntPnlSources, menu_kGrdntPnl);
    }//GEN-LAST:event_newGame_Sources_kBttnBackMouseClicked

    private void newGame_Categories_kBttnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Categories_kBttnBackMouseClicked
        // TODO add your handling code here:
        switchPanelView(newGame_kGrdntPnlCategories, newGame_kGrdntPnlSources);
    }//GEN-LAST:event_newGame_Categories_kBttnBackMouseClicked

    private void newGame_Categories_kBttnNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Categories_kBttnNextMouseClicked
        // TODO add your handling code here:
        String[] categories = chosenCheckBoxesToStringArray(newGame_kGrdntPnlCategories);
        if (categories.length == 0) {
            infoBox("Válassz ki legalább 1 kategóriát!");
            return;
        }
        gameGenerator.setChosenCategories(categories);

        switchPanelView(newGame_kGrdntPnlCategories, newGame_kGrdntPnlGameName);

    }//GEN-LAST:event_newGame_Categories_kBttnNextMouseClicked

    private void newGame_GameName_kBttnStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_GameName_kBttnStartMouseClicked
        // TODO add your handling code here:
        String gameName = newGame_GameName_jTxtFldGameName.getText();
        int cups = Integer.parseInt(newGame_GameName_jTxtFldCupNumber.getText());
        int refills = Integer.parseInt(newGame_GameName_jTxtFldRefillNumber.getText());
        if (gameName.equals("") || gameName.equals("Add meg a játék nevét!")) {
            infoBox("Adj nevet a játéknak!");
            return;
        }

        if (cups <= 0 || refills <= 0) {
            infoBox("Hibás pohár mennyiség!");
            return;
        }

        gameGenerator.setRules(cups, refills);

        gameGenerator.generateGame(gameName);
        game = gameGenerator.getGame();
        GameHandler.gameHandlerInstance.setGame(game);

        newGame_kGrdntPnlGameName.setVisible(false);
        menu_kGrdntPnl.setVisible(true);
        startGame();
        this.dispose();
    }//GEN-LAST:event_newGame_GameName_kBttnStartMouseClicked

    private void newGame_GameName_kBttnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_GameName_kBttnBackMouseClicked
        // TODO add your handling code here:
        switchPanelView(newGame_kGrdntPnlGameName, newGame_kGrdntPnlCategories);
    }//GEN-LAST:event_newGame_GameName_kBttnBackMouseClicked

    private void newGame_Sources_kBttnNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Sources_kBttnNextMouseClicked
        // TODO add your handling code here:
        String[] sources = chosenCheckBoxesToStringArray(newGame_kGrdntPnlSources);
        if (sources.length == 0) {
            infoBox("Válassz ki legalább 1 forrást!");
            return;
        }
        gameGenerator.setChosenSources(sources);

        addCheckboxesToPanel(newGame_kGrdntPnlCategories, gameGenerator.getCategoriesBySourcesInDatabase());

        switchPanelView(newGame_kGrdntPnlSources, newGame_kGrdntPnlCategories);
    }//GEN-LAST:event_newGame_Sources_kBttnNextMouseClicked

    private void settings_kBttnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings_kBttnBackMouseClicked
        // TODO add your handling code here:
        switchPanelView(settings_kGrdntPnl, menu_kGrdntPnl);
    }//GEN-LAST:event_settings_kBttnBackMouseClicked

    private void menu_bttnSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_bttnSettingsMouseClicked
        // TODO add your handling code here:
        String[] resolutions = UserProperties.userPropertiesInstance.getResolutions();
        settings_jCmbBxHostFrameSize.setModel(new DefaultComboBoxModel<>(resolutions));
        settings_jCmbBxHostFrameSize.setSelectedIndex(resolutions.length - 1);
        settings_jCmbBxPlayerFrameSize.setModel(new DefaultComboBoxModel<>(resolutions));
        settings_jCmbBxPlayerFrameSize.setSelectedIndex(resolutions.length - 1);

        switchPanelView(menu_kGrdntPnl, settings_kGrdntPnl);
    }//GEN-LAST:event_menu_bttnSettingsMouseClicked

    private void settings_kBttnImportQuizesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings_kBttnImportQuizesMouseClicked
        try {
            // TODO add your handling code here:
            databaseHandler.importAllKvizToDatabase();
            infoBox("Kvízek sikeresen importálva");
        } catch (IOException ex) {
            Logger.getLogger(JFrameMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_settings_kBttnImportQuizesMouseClicked

    private void settings_kBttnImportQuizesFromNapiKvizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings_kBttnImportQuizesFromNapiKvizMouseClicked
        try {
            // TODO add your handling code here:
            databaseHandler.importNapikvizToDatabase();
            infoBox("Kvízek sikeresen importálva Napikvízről");
        } catch (IOException ex) {
            Logger.getLogger(JFrameMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_settings_kBttnImportQuizesFromNapiKvizMouseClicked

    private void settings_kBttnClearQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings_kBttnClearQuestionMouseClicked
        // TODO add your handling code here:
        databaseHandler.clearQuestionsInDatabase();
        infoBox("A kérdések és játékok sikeresen törölve");
    }//GEN-LAST:event_settings_kBttnClearQuestionMouseClicked

    private void settings_kBttnClearGamesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings_kBttnClearGamesMouseClicked
        // TODO add your handling code here:
        databaseHandler.clearGamesInDatabase();
        infoBox("A játékok sikeresen törölve");
    }//GEN-LAST:event_settings_kBttnClearGamesMouseClicked

    private void newGame_GameName_jTxtFldGameNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_GameName_jTxtFldGameNameMouseClicked
        // TODO add your handling code here:
        if (newGame_GameName_jTxtFldGameName.getText().equals("Add meg a játék nevét!")) {
            newGame_GameName_jTxtFldGameName.setText("");
        }
    }//GEN-LAST:event_newGame_GameName_jTxtFldGameNameMouseClicked

    private void loadGame_kBttnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadGame_kBttnBackMouseClicked
        // TODO add your handling code heres
        switchPanelView(loadGame_kGrdntPnl, menu_kGrdntPnl);
    }//GEN-LAST:event_loadGame_kBttnBackMouseClicked

    private void menu_bttnLoadGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_bttnLoadGameMouseClicked
        // TODO add your handling code here:
        switchPanelView(menu_kGrdntPnl, loadGame_kGrdntPnl);
        loadGame_jLstPreviousGames.setModel(gameLoader.loadGamesToList());
    }//GEN-LAST:event_menu_bttnLoadGameMouseClicked

    private void newGame_Sources_kBttnSelectAllCheckboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Sources_kBttnSelectAllCheckboxMouseClicked
        // TODO add your handling code here:
        changeCheckBoxStatus(newGame_kGrdntPnlSources, true);
    }//GEN-LAST:event_newGame_Sources_kBttnSelectAllCheckboxMouseClicked

    private void newGame_Sources_kBttnUnselectAllCheckboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Sources_kBttnUnselectAllCheckboxMouseClicked
        // TODO add your handling code here:
        changeCheckBoxStatus(newGame_kGrdntPnlSources, false);
    }//GEN-LAST:event_newGame_Sources_kBttnUnselectAllCheckboxMouseClicked

    private void newGame_Categories_kBttnUnselectAllCheckboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Categories_kBttnUnselectAllCheckboxMouseClicked
        // TODO add your handling code here:
        changeCheckBoxStatus(newGame_kGrdntPnlCategories, false);
    }//GEN-LAST:event_newGame_Categories_kBttnUnselectAllCheckboxMouseClicked

    private void newGame_Categories_kBttnSelectAllCheckboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_Categories_kBttnSelectAllCheckboxMouseClicked
        // TODO add your handling code here:
        changeCheckBoxStatus(newGame_kGrdntPnlCategories, true);
    }//GEN-LAST:event_newGame_Categories_kBttnSelectAllCheckboxMouseClicked

    private void newGame_GameName_jTxtFldCupNumberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_GameName_jTxtFldCupNumberMouseClicked
        // TODO add your handling code here:
        if (newGame_GameName_jTxtFldCupNumber.getText().equals("10")) {
            newGame_GameName_jTxtFldCupNumber.setText("");
        }
    }//GEN-LAST:event_newGame_GameName_jTxtFldCupNumberMouseClicked

    private void newGame_GameName_jTxtFldRefillNumberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGame_GameName_jTxtFldRefillNumberMouseClicked
        // TODO add your handling code here:
        if (newGame_GameName_jTxtFldRefillNumber.getText().equals("1")) {
            newGame_GameName_jTxtFldRefillNumber.setText("");
        }
    }//GEN-LAST:event_newGame_GameName_jTxtFldRefillNumberMouseClicked

    private void loadGame_kBttnLoadGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadGame_kBttnLoadGameMouseClicked
        // TODO add your handling code here:
        int gameIndex = loadGame_jLstPreviousGames.getSelectedIndex();
        if (gameIndex < 0) {
            infoBox("Válassz egy játékot!");
            return;
        }

        gameLoader.loadGameForPlay(gameIndex);
        startGame();
        this.dispose();
    }//GEN-LAST:event_loadGame_kBttnLoadGameMouseClicked

    private void loadGame_kBttnDeleteGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadGame_kBttnDeleteGameMouseClicked
        // TODO add your handling code here:
        int gameIndex = loadGame_jLstPreviousGames.getSelectedIndex();
        if (gameIndex < 0) {
            infoBox("Válassz egy játékot!");
            return;
        }
        gameLoader.deleteGame(gameIndex);

        loadGame_jLstPreviousGames.setModel(gameLoader.loadGamesToList());
    }//GEN-LAST:event_loadGame_kBttnDeleteGameMouseClicked

    private void settings_jCmbBxHostFrameSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_jCmbBxHostFrameSizeActionPerformed
        // TODO add your handling code here:
        String hostResolution = String.valueOf(settings_jCmbBxHostFrameSize.getSelectedItem());
        UserProperties.userPropertiesInstance.setHostResolution(hostResolution);
    }//GEN-LAST:event_settings_jCmbBxHostFrameSizeActionPerformed

    private void settings_jCmbBxPlayerFrameSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_jCmbBxPlayerFrameSizeActionPerformed
        // TODO add your handling code here:
        String playerResolution = String.valueOf(settings_jCmbBxPlayerFrameSize.getSelectedItem());
        UserProperties.userPropertiesInstance.setPlayerResolution(playerResolution);
    }//GEN-LAST:event_settings_jCmbBxPlayerFrameSizeActionPerformed

    private void menu_jLblHintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_jLblHintMouseClicked
        // TODO add your handling code here:
        infoBox("<HTML>Üdvözöllek a DrinQuiz játékunkban!<br><br>"
                + "A játék menetéhez szükségetek van egy játékvezetőre, aki irányítja a játékot,<br>"
                + "illetve egy önként jelenkezőkre az ittasodáshoz, mint játékos.<br><br>"
                + "A játék folyamán kérdéseket kaptok, több válasz lehetőséggel, amelyek között<br>"
                + "szét kell osztanotok a poharaitokat, majd viselni a következményeket:<br>"
                + "amely poharak rossz helyre mentek, azoknak a tartalmát meg kell inni!<br><br>"
                + "Egy játékos játéka addig tart, amíg még vannak poharai és újratöltései<br>"
                + "(amennyiben kidölne, bármikor belehet fejezni a játékát a kör végén)<br>"
                + "Bármikor újra lehet tölteni a poharakat, ha hiszel magadban!<br><br>"
                + "Amennyiben először játszátok a játékot, a beállításokban importáljátok az összes, <br>"
                + "vagy a tetszőleges forrásból származó kvízeket. <br>"
                + "Fontos beállítani a felbontásokat is! <br>"
                + "Mivel ugyanazon a számítógépen, de 2 képernyőn fut a játék, ezért érdemes előre<br>"
                + "beállítani a játékos és a játékvezető monitorja alapján a felbontást. </HTML>");
    }//GEN-LAST:event_menu_jLblHintMouseClicked

///SAJÁT ELJÁRÁSOK
    private void addCheckboxesToPanel(JPanel panel, String[] source) {
        removeOldCheckBoxes(panel);

        javax.swing.JCheckBox[] jCheckboxArray;
        int CheckBoxNumber = source.length;
        jCheckboxArray = new javax.swing.JCheckBox[CheckBoxNumber];

        int defaultX = 25, defaultY = 270;
        int incX = 250, incY = 40;
        int X = defaultX, Y = defaultY;
        for (int i = 0; i < CheckBoxNumber; i++) {
            jCheckboxArray[i] = new javax.swing.JCheckBox();
            jCheckboxArray[i].setText(source[i]);
            jCheckboxArray[i].setBounds(X, Y, 250, 40);
            jCheckboxArray[i].setSelected(true);
            jCheckboxArray[i].setFont(new java.awt.Font("Century Gothic", 3, 18));
            panel.add(jCheckboxArray[i]);

            if (X != defaultX + 2 * incX) {
                X += incX;
            } else {
                X = defaultX;
                Y += incY;
            }
        }
    }

    private void removeOldCheckBoxes(JPanel panel) {
        JCheckBox comparerBox = new JCheckBox();

        for (Component box : panel.getComponents()) {
            if (box.getClass() == comparerBox.getClass()) {
                panel.remove(box);
            }
        }
    }

    private String[] chosenCheckBoxesToStringArray(JPanel panel) {
        String[] choosenCheckboxesString;
        JCheckBox tryIt = new JCheckBox();

        List<JCheckBox> jCheckboxArray = new ArrayList<>();

        for (Component box : panel.getComponents()) {
            if (box.getClass() == tryIt.getClass()) {
                jCheckboxArray.add((JCheckBox) box);
                if (!jCheckboxArray.get(jCheckboxArray.size() - 1).isSelected()) {
                    jCheckboxArray.remove(jCheckboxArray.size() - 1);
                }
            }
        }

        choosenCheckboxesString = new String[jCheckboxArray.size()];
        for (int i = 0; i < jCheckboxArray.size(); ++i) {
            choosenCheckboxesString[i] = jCheckboxArray.get(i).getText();
        }
        return choosenCheckboxesString;
    }

    private void changeCheckBoxStatus(JPanel panel, boolean toCheck) {
        JCheckBox tryIt = new JCheckBox();

        for (Component box : panel.getComponents()) {
            if (box.getClass() == tryIt.getClass()) {
                tryIt = (JCheckBox) box;

                if (toCheck) {
                    tryIt.setSelected(true);
                } else {
                    tryIt.setSelected(false);
                }
            }
        }
    }

    private void startGame() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                JFrameHost.main(new String[]{});
            }
        });

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                JFramePlayer.main(new String[]{});
            }
        });
    }

    ///SAJÁT ELJÁRÁSOK VÉGE
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane jLyrdPn;
    private javax.swing.JLabel loadGame_JLblLogo;
    private javax.swing.JList<String> loadGame_jLstPreviousGames;
    private javax.swing.JScrollPane loadGame_jScrllPn;
    private com.k33ptoo.components.KButton loadGame_kBttnBack;
    private com.k33ptoo.components.KButton loadGame_kBttnDeleteGame;
    private com.k33ptoo.components.KButton loadGame_kBttnLoadGame;
    private com.k33ptoo.components.KGradientPanel loadGame_kGrdntPnl;
    private javax.swing.JLabel menu_JLblLogo;
    private com.k33ptoo.components.KButton menu_bttnExit;
    private com.k33ptoo.components.KButton menu_bttnLoadGame;
    public com.k33ptoo.components.KButton menu_bttnNewGame;
    private com.k33ptoo.components.KButton menu_bttnSettings;
    private javax.swing.JLabel menu_jLblHint;
    private com.k33ptoo.components.KGradientPanel menu_kGrdntPnl;
    private javax.swing.JLabel newGame_Categories_JLblLogo;
    private javax.swing.JLabel newGame_Categories_jLblChooseSource;
    private com.k33ptoo.components.KButton newGame_Categories_kBttnBack;
    private com.k33ptoo.components.KButton newGame_Categories_kBttnNext;
    private com.k33ptoo.components.KButton newGame_Categories_kBttnSelectAllCheckbox;
    private com.k33ptoo.components.KButton newGame_Categories_kBttnUnselectAllCheckbox;
    private javax.swing.JLabel newGame_GameName_JLblLogo;
    private javax.swing.JLabel newGame_GameName_jLblCupNumber;
    private javax.swing.JLabel newGame_GameName_jLblRefillNumber;
    private javax.swing.JTextField newGame_GameName_jTxtFldCupNumber;
    private javax.swing.JTextField newGame_GameName_jTxtFldGameName;
    private javax.swing.JTextField newGame_GameName_jTxtFldRefillNumber;
    private com.k33ptoo.components.KButton newGame_GameName_kBttnBack;
    private com.k33ptoo.components.KButton newGame_GameName_kBttnStart;
    private javax.swing.JLabel newGame_Sources_JLblLogo;
    private javax.swing.JLabel newGame_Sources_jLblChooseSource;
    private com.k33ptoo.components.KButton newGame_Sources_kBttnBack;
    private com.k33ptoo.components.KButton newGame_Sources_kBttnNext;
    private com.k33ptoo.components.KButton newGame_Sources_kBttnSelectAllCheckbox;
    private com.k33ptoo.components.KButton newGame_Sources_kBttnUnselectAllCheckbox;
    private javax.swing.JLayeredPane newGame_jLyrdPn;
    private com.k33ptoo.components.KGradientPanel newGame_kGrdntPnlCategories;
    private com.k33ptoo.components.KGradientPanel newGame_kGrdntPnlGameName;
    private com.k33ptoo.components.KGradientPanel newGame_kGrdntPnlSources;
    private javax.swing.JComboBox<String> settings_jCmbBxHostFrameSize;
    private javax.swing.JComboBox<String> settings_jCmbBxPlayerFrameSize;
    private javax.swing.JLabel settings_jLblClearGames;
    private javax.swing.JLabel settings_jLblClearQuestion;
    private javax.swing.JLabel settings_jLblHostFrameSize;
    private javax.swing.JLabel settings_jLblImportQuizes;
    private javax.swing.JLabel settings_jLblImportQuizesFromNapiKviz;
    private javax.swing.JLabel settings_jLblPlayerFrameSize;
    private com.k33ptoo.components.KButton settings_kBttnBack;
    private com.k33ptoo.components.KButton settings_kBttnClearGames;
    private com.k33ptoo.components.KButton settings_kBttnClearQuestion;
    private com.k33ptoo.components.KButton settings_kBttnImportQuizes;
    private com.k33ptoo.components.KButton settings_kBttnImportQuizesFromNapiKviz;
    private com.k33ptoo.components.KGradientPanel settings_kGrdntPnl;
    // End of variables declaration//GEN-END:variables
}
